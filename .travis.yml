# Use container-based infrastructure
sudo: required
services:
  - docker

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  global:
     - AVTRANSCODER_BUILD_PATH=${TRAVIS_BUILD_DIR}/build-avtranscoder
     - AVTRANSCODER_INSTALL=install-avtranscoder
     - AVTRANSCODER_INSTALL_PATH=${TRAVIS_BUILD_DIR}/${AVTRANSCODER_INSTALL}

     - DEPENDENCY_INSTALL=install-dependency
     - DEPENDENCY_INSTALL_PATH=${TRAVIS_BUILD_DIR}/${DEPENDENCY_INSTALL}

     - DEPENDENCY_LOG_FILE=${TRAVIS_BUILD_DIR}/build-dependencies-log.txt

     - YASM_VERSION=1.3.0
     - LAME_VERSION=3.99.5
     - FAAC_VERSION=1.28
     - XVID_VERSION=1.3.3
     - FDKAAC_VERSION=0.1.3
     - OGG_VERSION=1.3.2
     - VORBIS_VERSION=1.3.4
     - VPX_VERSION=1.4.0
  matrix:
    - DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=true
    - DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=false
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.4.2 ENABLE_COVERAGE=true
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.4.2 ENABLE_COVERAGE=false
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.5.7 ENABLE_COVERAGE=false
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.6.8 ENABLE_COVERAGE=false
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.7.6 ENABLE_COVERAGE=false
    - DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.8.6 ENABLE_COVERAGE=false

matrix:
  exclude:
    # generate coverage only with gcc
    - compiler: clang
      env: DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.4.2 ENABLE_COVERAGE=true
    - compiler: clang
      env: DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=true
    # generate coverage only on linux
    - os: osx
      env: DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=true
    - os: osx
      env: DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.4.2 ENABLE_COVERAGE=true
  allow_failures:
    # build with libav
    - env: DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=true
    - env: DEPENDENCY_NAME=libav DEPENDENCY_VERSION=11.3 ENABLE_COVERAGE=false
    # build with ffmpeg-2.8.6
    - env: DEPENDENCY_NAME=ffmpeg DEPENDENCY_VERSION=2.8.6 ENABLE_COVERAGE=false
  fast_finish: true

# This results in a 2×2×2x2 build matrix.
# Where the variables are: os / compiler / DEPENDENCY_NAME / ENABLE_COVERAGE

# If ENABLE_COVERAGE is True, we push the coverage to coveralls.
# If ENABLE_COVERAGE is False, we push the binaries to github releases.

addons:
  apt:
    sources: ['kalakris-cmake']
    packages:
    - cmake
    - swig
    - python-dev
    - python-nose
    - freeglut3-dev

cache:
  # Caching Ubuntu packages
  apt: true
  # Caching other directories
  directories:
  - ${DEPENDENCY_INSTALL_PATH}

before_script:
  - env | sort
  - date -u
  - uname -a

  - cd ${TRAVIS_BUILD_DIR}

  # install coverage tools
  - if [ ${ENABLE_COVERAGE} ]; then ./tools/travis/gcc.install.coverage.sh; fi

  # install avtranscoder dependencies
  - if [ ${TRAVIS_OS_NAME} = "linux" ]; then ./tools/travis/linux.install.deps.sh; fi
  - if [ ${TRAVIS_OS_NAME} = "osx" ]; then ./tools/travis/osx.install.deps.sh; fi

script:
  # build
  - ./tools/travis/build.sh

  # launch tests
  - if [ ${TRAVIS_OS_NAME} = "linux" ]; then ./tools/travis/python.nosetests.sh; fi

after_success:
  # generate coverage for coveralls
  - if [ ${ENABLE_COVERAGE} ]; then ./tools/travis/gcc.generate.coverage.sh; fi

after_failure:
  - cat ${AVTRANSCODER_BUILD_PATH}/CMakeFiles/CMakeOutput.log
  - cat ${DEPENDENCY_LOG_FILE}

before_deploy:
  # copy libbz2, external dependency of libavformat
  - if [ ${TRAVIS_OS_NAME} = "linux" ]; then cp /lib/x86_64-linux-gnu/{libbz2.so.1,libbz2.so.1.0,libbz2.so.1.0.4} ${DEPENDENCY_INSTALL_PATH}/lib; fi
  # create archive
  - cd ${TRAVIS_BUILD_DIR}
  - tar -cvzf avtranscoder-${TRAVIS_OS_NAME}-${CC}-${DEPENDENCY_NAME}-${DEPENDENCY_VERSION}.tgz ${DEPENDENCY_INSTALL} ${AVTRANSCODER_INSTALL}

deploy:
  provider: releases
  api_key:
    secure: ${GITHUB_RELEASE_API_KEY}
  file: avtranscoder-${TRAVIS_OS_NAME}-${CC}-${DEPENDENCY_NAME}-${DEPENDENCY_VERSION}.tgz
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
    condition: ${ENABLE_COVERAGE} = false
