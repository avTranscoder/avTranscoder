cmake_minimum_required(VERSION 2.8) 

project(avtranscoder)

# Set avtranscoder versions
set(AVTRANSCODER_VERSION_MAJOR "0")
set(AVTRANSCODER_VERSION_MINOR "2")
set(AVTRANSCODER_VERSION_MICRO "1")
set(AVTRANSCODER_VERSION ${AVTRANSCODER_VERSION_MAJOR}.${AVTRANSCODER_VERSION_MINOR}.${AVTRANSCODER_VERSION_MICRO})

# Define avtranscoder versions
add_definitions(-DAVTRANSCODER_VERSION_MAJOR=${AVTRANSCODER_VERSION_MAJOR})
add_definitions(-DAVTRANSCODER_VERSION_MINOR=${AVTRANSCODER_VERSION_MINOR})
add_definitions(-DAVTRANSCODER_VERSION_MICRO=${AVTRANSCODER_VERSION_MICRO})

# Diplay commands being ran by CMake
set(CMAKE_VERBOSE_MAKEFILE OFF)

# CPP flags on debug / release mode
if(NOT WIN32)
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -fPIC -pg -g")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fPIC -O3")
else()
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
endif()


# CPack options
SET(CPACK_DEB_COMPONENT_INSTALL 1)
set(CPACK_INSTALL_PREFIX "/usr")
set(CPACK_PACKAGING_INSTALL_PREFIX "/usr")


set(CPACK_GENERATOR
	"DEB")

set(CPACK_DEBIAN_PACKAGE_MAINTAINER
	"Marc-Antoine ARNAUD")

set(CPACK_PACKAGE_DESCRIPTION_SUMMARY
	"C++ API for LibAV / FFMpeg - provides the high level API to re-wrap or transcode media easily.")

set(CPACK_DEBIAN_PACKAGE_DEPENDS
	"${CPACK_DEBIAN_PACKAGE_AUTO_DEPENDS}, libavutil, libavcodec, libavformat, libavdevice, libswscale, libavresample")

set(CPACK_COMPONENT_DEV_DESCRIPTION
   "C/C++ header files for use with avtranscoder")

# interconnected dependencies
# set(CPACK_COMPONENT_TOOLS_DEPENDS lib)
# set(CPACK_COMPONENT_DEV_DEPENDS lib)
# set(CPACK_COMPONENT_PYTHON_DEPENDS lib)
# set(CPACK_COMPONENT_JAVA_DEPENDS lib)

add_subdirectory(src)
add_subdirectory(app)

include(CPack)

